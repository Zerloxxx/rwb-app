import { useMissions } from "../context/MissionsContext";
import { useCoins } from "../context/CoinsContext";
import { transferParentToChild } from "../utils/piggyStorage";

const MissionCard = ({ mission }) => {
  const { 
    getMissionProgress, 
    isMissionCompleted, 
    completeMission,
    triggerMission 
  } = useMissions();
  const { balance, buyReward } = useCoins();

  const progress = getMissionProgress(mission.id);
  const completed = isMissionCompleted(mission.id);
  const progressPercent = Math.min((progress / mission.target) * 100, 100);

  const handleClaimReward = () => {
    if (completed) return;
    
    const success = completeMission(mission.id);
    if (success) {
      // –î–µ–Ω—å–≥–∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º —Å –∫–∞—Ä—Ç—ã —Ä–æ–¥–∏—Ç–µ–ª—è –Ω–∞ –∫–∞—Ä—Ç—É —Ä–µ–±—ë–Ω–∫–∞
      if (mission.reward.type === "money") {
        transferParentToChild(mission.reward.amount || 0);
      } else if (mission.reward.type === "coins") {
        // –ú–æ–Ω–µ—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –∫–∞–∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≤–∞–ª—é—Ç–∞
        console.log(`–ü–æ–ª—É—á–µ–Ω–æ ${mission.reward.amount} –º–æ–Ω–µ—Ç!`);
      }
    }
  };

  const getRewardIcon = () => {
    switch (mission.reward.type) {
      case "coins":
        return "üí∞";
      case "badge":
        return "üèÜ";
      case "skin":
        return "üé®";
      default:
        return "üéÅ";
    }
  };

  const getRewardText = () => {
    switch (mission.reward.type) {
      case "coins":
        return `${mission.reward.amount} –º–æ–Ω–µ—Ç`;
      case "badge":
        return "–ó–Ω–∞—á–æ–∫";
      case "skin":
        return "–°–∫–∏–Ω";
      default:
        return "–ù–∞–≥—Ä–∞–¥–∞";
    }
  };

  const getTypeColor = () => {
    switch (mission.type) {
      case "daily":
        return "from-green-600/80 to-emerald-700/80";
      case "weekly":
        return "from-blue-600/80 to-cyan-700/80";
      case "story":
        return "from-purple-600/80 to-pink-700/80";
      case "custom":
        return "from-amber-700/80 to-orange-800/80";
      default:
        return "from-gray-600/80 to-gray-700/80";
    }
  };

  const getTypeLabel = () => {
    switch (mission.type) {
      case "daily":
        return "–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è";
      case "weekly":
        return "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è";
      case "story":
        return "–°—é–∂–µ—Ç–Ω–∞—è";
      case "custom":
        return "–û—Ç —Ä–æ–¥–∏—Ç–µ–ª—è";
      default:
        return "–ú–∏—Å—Å–∏—è";
    }
  };

  return (
    <div className={`relative overflow-hidden rounded-[18px] bg-gradient-to-r ${getTypeColor()} p-4 text-white shadow-lg`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–∏—Å—Å–∏–∏ */}
      <div className="flex items-start justify-between gap-3">
        <div className="flex-1">
          <div className="flex items-center gap-2">
            <span className="text-2xl">{mission.icon}</span>
            <div>
              <div className="text-sm font-medium text-white/80">{getTypeLabel()}</div>
              <div className="text-lg font-bold">{mission.title}</div>
            </div>
          </div>
          <div className="mt-1 text-sm text-white/90">{mission.description}</div>
        </div>
        
        {/* –ù–∞–≥—Ä–∞–¥–∞ */}
        <div className="flex flex-col items-center gap-1">
          <div className="text-2xl">{getRewardIcon()}</div>
          <div className="text-xs font-medium text-white/80">{getRewardText()}</div>
          <div className="text-xs text-white/70">+{mission.xp} XP</div>
        </div>
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
      <div className="mt-4">
        <div className="flex items-center justify-between text-sm">
          <span className="text-white/80">–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
          <span className="font-semibold">{progress}/{mission.target}</span>
        </div>
        <div className="mt-2 h-2 overflow-hidden rounded-full bg-white/20">
          <div 
            className="h-full rounded-full bg-white/80 transition-all duration-500"
            style={{ width: `${progressPercent}%` }}
          />
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã */}
      {progress >= mission.target && !completed && (
        <div className="mt-4">
          <button
            onClick={handleClaimReward}
            className="w-full rounded-xl bg-white/20 px-4 py-3 font-semibold text-white transition-all hover:bg-white/30 hover:scale-105 active:scale-95"
          >
            üéâ –ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É
          </button>
        </div>
      )}

      {/* –°—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
      {completed && (
        <div className="mt-4 flex items-center justify-center gap-2 rounded-xl bg-white/20 px-4 py-3">
          <span className="text-xl">‚úÖ</span>
          <span className="font-semibold">–ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!</span>
        </div>
      )}
    </div>
  );
};

export default MissionCard;
