import CTA from "../components/CTA";
import { useCoins } from "../context/CoinsContext";
import logoRWB from "../assets/rwb_clean.png";
import usePiggyOverview from "../hooks/usePiggyOverview";
import { getCardThemeStyle } from "../utils/cardThemes";

const IconQR = ({ className = "w-6 h-6" }) => (
  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className}>
    <path d="M4 4h6v6H4zM14 4h6v6h-6zM4 14h6v6H4z" />
    <path d="M14 14h3m3 0v6M17 20h-3v-6h6" />
  </svg>
);

const IconTransfer = ({ className = "w-6 h-6" }) => (
  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className}>
    <path d="M7 7h11l-3-3m3 3-3 3M17 17H6l3 3m-3-3 3-3" />
  </svg>
);

const IconHome = ({ className = "w-6 h-6" }) => (
  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className}>
    <path d="M3 12l9-8 9 8" />
    <path d="M5 12v8h14v-8" />
  </svg>
);

const IconMenu = ({ className = "w-6 h-6" }) => (
  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className}>
    <path d="M4 6h16M4 12h16M4 18h16" />
  </svg>
);

const IconBank = ({ className = "w-6 h-6" }) => (
  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className}>
    <path d="M3 10l9-5 9 5" />
    <path d="M4 10h16v8H4z" />
  </svg>
);

const IconCart = ({ className = "w-6 h-6" }) => (
  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className}>
    <path d="M6 6h15l-1.5 9H7.5L6 6z" />
    <circle cx="9" cy="20" r="1.5" />
    <circle cx="18" cy="20" r="1.5" />
  </svg>
);

const IconUser = ({ className = "w-6 h-6" }) => (
  <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className={className}>
    <circle cx="12" cy="8" r="4" />
    <path d="M4 20c2-4 14-4 16 0" />
  </svg>
);

const formatCurrency = (value = 0) =>
  new Intl.NumberFormat("ru-RU", {
    style: "currency",
    currency: "RUB",
    maximumFractionDigits: 0,
  }).format(value || 0);

export default function Home({ goto, role = "child", onOpenRoleModal }) {
  const { childTotal = 0, cardBalance = 0 } = usePiggyOverview();
  const roleLabel = role === "parent" ? "–†–æ–¥–∏—Ç–µ–ª—å" : "–†–µ–±—ë–Ω–æ–∫";
  const { balance, active } = useCoins();
  const homeCardStyle = getCardThemeStyle(active?.cardTheme) || {
    backgroundImage: "url(./penguin-bg.jpg)",
    backgroundSize: "cover",
    backgroundPosition: "center",
  };

  return (
    <div className="mx-auto w-[430px] min-h-[100svh] bg-[#0b0b12] pb-28 text-white" style={{ paddingTop: 'env(safe-area-inset-top)', paddingBottom: 'env(safe-area-inset-bottom)' }}>
      <header
        className="relative z-40 flex items-center justify-between bg-[#0b0b12] px-5 pb-3 shadow-md shadow-black/30"
        style={{ paddingTop: "calc(env(safe-area-inset-top, 0) + 16px)" }}
      >
        <div className="flex items-center gap-2">
          <div className="rounded-full bg-white px-4 py-1 shadow-md">
            <img src={logoRWB} alt="–õ–æ–≥–æ—Ç–∏–ø RWB" className="h-5 w-auto object-contain" />
          </div>
          <div className="leading-tight">
            <div className="text-sm text-white/60">RWB –ë–∞–Ω–∫</div>
            <div className="text-base font-semibold">–†–µ–∂–∏–º: {roleLabel}</div>
          </div>
        </div>

        <div className="rounded-full bg-white/10 px-3 py-1.5 text-sm">üí∞ {balance}</div>

        {onOpenRoleModal && (
          <button
            type="button"
            onClick={onOpenRoleModal}
            className="flex h-9 w-9 items-center justify-center rounded-full bg-white/10"
            aria-label="–°–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"
          >
            <IconMenu className="h-5 w-5" />
          </button>
        )}
      </header>

      <section className="rounded-t-[28px] bg-gradient-to-b from-[#5d2efc] via-[#6a38f5] to-[#9b4dff] px-5 pb-6">
        <div className="flex flex-col gap-4">
          <button
            type="button"
            onClick={() => goto("card")}
            className="relative overflow-hidden rounded-[24px] p-5 text-left text-white shadow-lg shadow-black/30"
            style={{ ...homeCardStyle, minHeight: 200 }}
            aria-label="–û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã"
          >
            <div className="absolute inset-0 bg-black/35" />
            <div className="relative flex min-h-[200px] flex-col justify-between">
              <div>
                <div className="text-xs uppercase tracking-wide text-white/70">–ö–∞—Ä—Ç–∞ —Ä–µ–±—ë–Ω–∫–∞</div>
                <div className="mt-3 text-[37px] font-extrabold leading-none tabular-nums">{formatCurrency(cardBalance)}</div>
                <div className="mt-4 text-sm text-white/80">–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ–π</div>
              </div>
              <div className="flex flex-wrap items-center justify-between gap-3 text-xs text-white/80">
                <span>**** 2486 - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: —Å–µ–≥–æ–¥–Ω—è</span>
                <div className="rounded-2xl bg-white/20 px-3 py-2 text-xs font-semibold text-white">Kids</div>
              </div>
            </div>
          </button>


          <button
            type="button"
            onClick={() => goto("spends")}
            className="flex flex-col items-start gap-3 rounded-[24px] bg-[#1a1a1f] p-5 text-left text-white shadow-lg shadow-black/25 transition hover:ring-2 hover:ring-white/20"
            aria-label="–û—Ç–∫—Ä—ã—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É —Ç—Ä–∞—Ç"
          >
            <div className="text-xs font-semibold uppercase tracking-wide text-white/65">–¢—Ä–∞—Ç—ã –∑–∞ –º–µ—Å—è—Ü</div>
            <div className="flex w-full flex-wrap items-end justify-between gap-3">
              <div>
                <div className="text-[28px] font-extrabold tabular-nums">{formatCurrency(0)}</div>
                <div className="mt-1 text-xs text-white/60">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á—ë—Ç –∏ –¥–µ—Ç–∞–ª–∏</div>
              </div>
              <span className="inline-flex items-center justify-center rounded-full bg-white/12 px-4 py-1.5 text-xs font-semibold text-white/85">
                –û—Ç–∫—Ä—ã—Ç—å
              </span>
            </div>
          </button>

          {/* –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ (QR/–ü–µ—Ä–µ–≤–æ–¥—ã) –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã */}

          <CTA className="flex h-[96px] items-center justify-center gap-3 rounded-[24px]">
            <span className="text-[26px]">+</span>
            <span className="text-[15px] font-semibold">–ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ—à–µ–ª—ë–∫</span>
          </CTA>

          <div className="rounded-[24px] bg-[#1a1a1f] px-6 py-5 text-white shadow-lg shadow-black/25">
            <div className="text-xs uppercase tracking-wide text-white/65">–ö–æ–ø–∏–ª–∫–∞</div>
            <div className="mt-2 text-[30px] font-extrabold leading-none tabular-nums">{formatCurrency(childTotal)}</div>
            <div className="mt-1 text-xs text-white/60">–õ–∏—á–Ω—ã–µ —Ü–µ–ª–∏ —Ä–µ–±—ë–Ω–∫–∞</div>
            <button
              type="button"
              onClick={() => goto("piggy")}
              className="mt-4 w-full rounded-[14px] bg-white/12 px-4 py-2 text-[12px] font-semibold transition hover:bg-white/18"
            >
              –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ–ø–∏–ª–∫–∏
            </button>
          </div>

          {/* –ö–∞—Ä—Ç–æ—á–∫–∞ ¬´–û–±—É—á–µ–Ω–∏–µ¬ª —É–±—Ä–∞–Ω–∞ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é */}

        </div>
      </section>

      <section className="space-y-4 px-5 pt-5 text-white">
        <div className="rounded-[24px] bg-[#1a1a1f] p-5 shadow-lg shadow-black/20">
          <div className="text-[18px] font-semibold">–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã</div>
          <div className="mt-2 text-sm text-white/70">
            –ü—Ä–∏–¥—É–º—ã–≤–∞–π—Ç–µ —Ü–µ–ª–∏ –≤–º–µ—Å—Ç–µ —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏, —á—Ç–æ–±—ã –Ω–∞–∫–æ–ø–∏—Ç—å –±—ã—Å—Ç—Ä–µ–µ.
          </div>
        </div>

        <div className="rounded-[24px] bg-[#1a1a1f] p-5 shadow-lg shadow-black/20">
          <div className="text-[18px] font-semibold">–ê–∫—Ü–∏–∏ –∏ –±–æ–Ω—É—Å—ã</div>
          <div className="mt-2 text-sm text-white/70">
            –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤—ã–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ Wildberries ‚Äî –º—ã –ø–æ–¥—Å–∫–∞–∂–µ–º, –∫—É–¥–∞ –≤—ã–≥–æ–¥–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å.
          </div>
        </div>
      </section>

      <nav className="fixed inset-x-0 bottom-0 z-50">
        <div
          className="mx-auto w-full max-w-[430px] px-5"
          style={{ paddingBottom: "calc(env(safe-area-inset-bottom, 0) + 16px)" }}
        >
          <div className="grid grid-cols-4 gap-2 rounded-[24px] bg-white p-3 text-black shadow-xl shadow-black/20">
            <div className="flex flex-col items-center text-[11px] text-black">
              <div className="mb-1 flex h-8 w-8 items-center justify-center rounded-full bg-black/5"><IconHome className="h-5 w-5" /></div>
              <span>–ì–ª–∞–≤–Ω–∞—è</span>
            </div>
            <button
              type="button"
              onClick={() => goto("piggy")}
              className="flex flex-col items-center text-[11px] text-black/70"
            >
              <div className="mb-1 flex h-8 w-8 items-center justify-center rounded-full bg-black/5"><IconBank className="h-5 w-5" /></div>
              <span>–ö–æ–ø–∏–ª–∫–∞</span>
            </button>
            <button
              type="button"
              onClick={() => (window.location.hash = "#/learn")}
              className="flex flex-col items-center text-[11px] text-black/70"
            >
              <div className="mb-1 flex h-8 w-8 items-center justify-center rounded-full bg-black/5">
                {/* –ò–∫–æ–Ω–∫–∞ ¬´–û–±—É—á–µ–Ω–∏–µ¬ª */}
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" className="h-5 w-5">
                  <path d="M3 9l9-5 9 5-9 5-9-5z" />
                  <path d="M21 14v4" />
                  <path d="M12 14l-7-3.9V14a4 4 0 0 0 4 4h6a4 4 0 0 0 4-4v-3.9L12 14z" />
                </svg>
              </div>
              <span>–û–±—É—á–µ–Ω–∏–µ</span>
            </button>
            <button
              type="button"
              onClick={() => (window.location.hash = "#/profile")}
              className="flex flex-col items-center text-[11px] text-black/70"
            >
              <div className="mb-1 flex h-8 w-8 items-center justify-center rounded-full bg-black/5"><IconUser className="h-5 w-5" /></div>
              <span>–ü—Ä–æ—Ñ–∏–ª—å</span>
            </button>
          </div>
        </div>
      </nav>
    </div>
  );
}



